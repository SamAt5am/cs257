Sam Hiken and James Brink – 10/29/22

DATASET

The data for this web application comes from https://xd.saul.pw/data/#download. This dataset is called the “xd-clues.zip” (it is the third option). Click on the link (“xd-clues.zip”) to download a file called “clues.tsv.” Click on the link (“xd-metadata.zip”) to download a file called “puzzles.tsv”

“clues.tsv” contains four factors: pubid, year, answer, and clue. Each row represents a published clue and answer. For instance, row five has the clue “newspaper revenue” and the answer “ADS.”

“puzzles.tsv” contains a list of puzzles with seven columns: xdid, which gives an id to each puzzle (and also indicates the publication venue for a puzzle), date published, puzzle dimensions, puzzle title, constructors, copyright, and A1_D1 (the first across and first down answer).

USE CASES

STORY: A crossword fan is stumped while trying to solve one of Stella Zawitowski’s notoriously difficult puzzles on her website, Tough as Nails. The solver can search one of Zawitowski’s absurdly vague clues (“Set,” 6 letters), and obtain a list of answers for clues that have contained the word “set.”

IMPLEMENTATION: We use a search bar. We want to allow users to search for either clues or answers in our database, so we’ll either include two search bars or have one search bar where users can toggle between searching for clues and searching for answers. After the user enters a keyword for a clue in the database, a list of all clues that have contained that keyword is displayed. We could make each clue that is displayed a drop-down menu that users can click on to get the answers that correspond to that clue. Alternatively, we could have each clue be a link that takes a user to a separate page that lists the possible answers for that clue.

STORY: A crossword puzzle constructor (sometimes called a cruciverbalist) is writing a crossword puzzle. They have generated a grid with answers, and are attempting to write clues to go along with them. They can search for a phrase – KETCHUP – and obtain a list of clues that others have used along with it.

IMPLEMENTATION: Again, we use a search bar. After a user enters an answer in the database, we display a list of clues that have been used to hint that answer. We could have the clues be sorted by the frequency with which they have been used, or by the date they were most recently used. We could allow users to specify this parameter in their search. 

STORY: A layperson with a passing interest in linguistics and etymology can search the phrase BOO-YA to find how often it has appeared in crossword puzzles over time. They can figure out whether this quintessential piece of 90’s slang appeared more frequently in crossword puzzles before 2000.

IMPLEMENTATION: When a user searches for an answer, we have a button underneath the search bar that says something along the lines of “see usage over time.” When the user clicks the button, we display a bar chart indicating how many times the answer was used in each year since, say, 1980. We can do the same thing for keywords in clues – when a user enters a word into the clue search bar, they have an option to see the usage of that keyword in clues over time. We could also support functionality in the opposite direction: when a user searches for a year, we can tell them what words appeared most frequently in that year. (However we suspect this wouldn’t change too much from year to year;  short words with common letters – “era,” “oreo,” “sat” – will be the most common words pretty much any year).

STORY: A crossword enthusiast with a favorite constructor may search for a list of puzzles created by them. The list contains information about each puzzle’s publication date and venue. 

IMPLEMENTATION: We have a “search for constructor” feature. One way to do this would be via search bar – a user types in a constructor’s name, presses enter, then is taken to a list of constructors whose names include the search text. The user can click on a name and be taken to a list of puzzles written by that constructor. We could also have a list off to the side of the main page called “Prolific Constructors,” which lists individuals who have written a large number of puzzles. Clicking on a constructor gives a list of their puzzles.

STORY: An linguistically-oriented user interested in the usage of crossword answers over time can find the most popular answers in each year.

IMPLEMENTATION: We have a page on the site that lists the most popular answers of all time. At the top of the page, there is a feature that allows users to type in a year. The page will then display the most popular answers in that year.  
